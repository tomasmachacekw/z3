PRIO 0
- migrate to older version
- check if I need basic rules for equality
- check confluency of invertibility condition rewrite rules 
- replace more complex sides in (a + x) mod s = t by a new variable

PRIO 2
-- when linear just normalize it with inv cond, when non-linear replace it by <=, =>


-- Konzultovat -- operacie modi, mod0?? what to do
               -- tvorba nových pravidiel, napr. na rozbitie modula? možno ich pridávať iba ak platia v modeli?? a mať to zase ako Side Condition - replace by var
               -- kam to hodíme úpravu výrazov, kedže už sa zbavujeme vars a nie je to úplne normalizácia
               -- prepisovať <u na <=u alebo radsej pridat dalsie invertibility conditions?
                + prepis mi umožní viac použiť pravidlá z LIA napr. na nelinearne termy
                - kill me
               -- Konzultovat navrh postupu 1 - 4.
               -- generate signed op rules on SYGUS too? or rewrite signed into unsigned?

Konzultovat2 - mainloop je ok? OK
             - implementujem postuopne pravidla
             - wtf kompilacia v non-debug mode - validation rule fail
             - kompilacia v debug mode - validation rule nekričí

Konzultovat3 -- dorobene rw rules for mul, udiv, umod, bvand, bvor for all comparators
             -- dorobene basic ops for ineq ops (s+x , -x, ~x, x) (staci pridat bv sub ako bv add???)
             -- add conditions for shifts???